package com.example.sql;

import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.ItemTouchHelper;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    ImageButton imageButton;
    ArrayList<Note> notes;
    RecyclerView recyclerView;
    NoteAdapter noteAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imageButton = findViewById(R.id.imageBtn);
        recyclerView = findViewById(R.id.recycler);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        imageButton.setOnClickListener(v -> {
            LayoutInflater inflater = LayoutInflater.from(MainActivity.this);
            View viewInput = inflater.inflate(R.layout.note_input, null, false);
            EditText edtItem = viewInput.findViewById(R.id.edit_item);

            new AlertDialog.Builder(MainActivity.this)
                    .setView(viewInput)
                    .setTitle("Add Grocery Item")
                    .setPositiveButton("Add", (dialog, which) -> {
                        String title = edtItem.getText().toString().trim();
                        if (!title.isEmpty()) {
                            Note note = new Note(title);
                            boolean isInserted = new NoteHandler(MainActivity.this).create(note);
                            if (isInserted) {
                                Toast.makeText(MainActivity.this, "Note Saved", Toast.LENGTH_SHORT).show();
                                loadNotes();
                            } else {
                                Toast.makeText(MainActivity.this, "Unable to save note", Toast.LENGTH_SHORT).show();
                            }
                        } else {
                            Toast.makeText(MainActivity.this, "Note cannot be empty", Toast.LENGTH_SHORT).show();
                        }
                    })
                    .setNegativeButton("Cancel", (dialog, which) -> dialog.dismiss())
                    .show();
        });

        ItemTouchHelper.SimpleCallback itemTouchCallback = new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {
            @Override
            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
                return false;
            }

            @Override
            public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
                int position = viewHolder.getAdapterPosition();
                if (position != RecyclerView.NO_POSITION) {
                    Note deletedNote = notes.get(position);
                    boolean isDeleted = new NoteHandler(MainActivity.this).delete(deletedNote.getId());
                    if (isDeleted) {
                        notes.remove(position);
                        noteAdapter.notifyItemRemoved(position);
                        Toast.makeText(MainActivity.this, "Note deleted", Toast.LENGTH_SHORT).show();
                    } else {
                        noteAdapter.notifyItemChanged(position);
                        Toast.makeText(MainActivity.this, "Failed to delete note", Toast.LENGTH_SHORT).show();
                    }
                }
            }
        };

        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(itemTouchCallback);
        itemTouchHelper.attachToRecyclerView(recyclerView);

        loadNotes();
    }

    public ArrayList<Note> readNotes() {
        return new NoteHandler(this).readNotes();
    }

    @SuppressLint("NotifyDataSetChanged")
    public void loadNotes() {
        notes = readNotes();
        if (noteAdapter == null) {
            noteAdapter = new NoteAdapter(notes, this);
            recyclerView.setAdapter(noteAdapter);
        } else {
            noteAdapter.setNotes(notes);
            noteAdapter.notifyDataSetChanged();
        }
    }
}